name: hashicorp/googleworkspace
resources:
    googleworkspace_chrome_policy Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: Chrome Policy resource in the Terraform Googleworkspace provider. Currently only supports policies not requiring additionalTargetKeys. Chrome Policy Schema resides under the https://www.googleapis.com/auth/chrome.management.policy client scope.
        name: googleworkspace_chrome_policy Resource - terraform-provider-googleworkspace
        title: googleworkspace_chrome_policy Resource - terraform-provider-googleworkspace
        argumentDocs:
            id: (String) The ID of this resource.
            org_unit_id: (String) The target org unit on which this policy is applied.
            policies: '(Block List, Min: 1) Policies to set for the org unit (see below for nested schema)'
            schema_name: (String) The full qualified name of the policy schema.
            schema_values: (Map of String) JSON encoded map that represents key/value pairs that correspond to the given schema.
        importStatements: []
    googleworkspace_domain Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: Domain resource manages Google Workspace Domains. Domain resides under the https://www.googleapis.com/auth/admin.directory.domain client scope.
        name: googleworkspace_domain Resource - terraform-provider-googleworkspace
        title: googleworkspace_domain Resource - terraform-provider-googleworkspace
        argumentDocs:
            creation_time: (Number) Creation time of the domain. Expressed in Unix time format.
            domain_aliases: (List of String) asps.list of domain alias objects.
            domain_name: (String) The domain name of the customer.
            etag: (String) ETag of the resource.
            id: (String) The ID of this resource.
            is_primary: (Boolean) Indicates if the domain is a primary domain.
            verified: (Boolean) Indicates the verification state of a domain.
        importStatements:
            - terraform import googleworkspace_domain.example example.com
    googleworkspace_domain_alias Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: Domain Alias resource manages Google Workspace Domain Aliases. Domain Alias resides under the https://www.googleapis.com/auth/admin.directory.domain client scope.
        name: googleworkspace_domain_alias Resource - terraform-provider-googleworkspace
        title: googleworkspace_domain_alias Resource - terraform-provider-googleworkspace
        argumentDocs:
            creation_time: (Number) Creation time of the domain alias.
            domain_alias_name: (String) The domain alias name.
            etag: (String) ETag of the resource.
            id: (String) The ID of this resource.
            parent_domain_name: (String) The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer.
            verified: (Boolean) Indicates the verification state of a domain alias.
        importStatements:
            - terraform import googleworkspace_domain_alias.example alias-example.com
    googleworkspace_gmail_send_as_alias Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: Gmail Send As Alias resource in the Terraform Googleworkspace provider. Please ensure the Gmail API is enabled for your workspace and that the user being configured has a Gmail license. Gmail Send As Alias resides under the https://www.googleapis.com/auth/gmail.settings client scope.
        name: googleworkspace_gmail_send_as_alias Resource - terraform-provider-googleworkspace
        title: googleworkspace_gmail_send_as_alias Resource - terraform-provider-googleworkspace
        argumentDocs:
            display_name: (String) A name that appears in the 'From:' header for mail sent using this alias. For custom 'from' addresses, when this is empty, Gmail will populate the 'From:' header with the name that is used for the primary address associated with the account. If the admin has disabled the ability for users to update their name format, requests to update this field for the primary login will silently fail.
            host: (String) The hostname of the SMTP service.
            id: (String) The ID of this resource.
            is_default: (Boolean) Whether this address is selected as the default 'From:' address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is true. Changing this from false to true for an address will result in this field becoming false for the other previous default address. Toggling an existing alias' default to false is not possible, another alias must be added/imported and toggled to true to remove the default from an existing alias. To avoid drift with Terraform, please change the previous default's config to false AFTER a new default is applied and perform a refresh to synchronize with remote state.
            is_primary: (Boolean) Whether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases.
            password: (String, Sensitive) The password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.
            port: (Number) The port of the SMTP service.
            primary_email: (String) User's primary email address.
            reply_to_address: (String) An optional email address that is included in a 'Reply-To:' header for mail sent using this alias. If this is empty, Gmail will not generate a 'Reply-To:' header.
            security_mode: (String) Defaults to securityModeUnspecified. The protocol that will be used to secure communication with the SMTP service.
            send_as_email: (String) The email address that appears in the 'From:' header for mail sent using this alias.
            signature: (String) An optional HTML signature that is included in messages composed with this alias in the Gmail web UI. This signature is added to new emails only.
            smtp_msa: '(Block List, Max: 1) An optional SMTP service that will be used as an outbound relay for mail sent using this alias. If this is empty, outbound mail will be sent directly from Gmail''s servers to the destination SMTP service. This setting only applies to custom ''from'' aliases. (see below for nested schema)'
            treat_as_alias: (Boolean) Defaults to true. Whether Gmail should treat this address as an alias for the user's primary email address. This setting only applies to custom 'from' aliases. See https://support.google.com/a/answer/1710338 for help on making this decision
            username: (String) The username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.
            verification_status: (String) Indicates whether this address has been verified for use as a send-as alias.
        importStatements:
            - terraform import googleworkspace_gmail_send_as_alias.alias user@example.com:alias@anotherexample.com
    googleworkspace_group Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: Group resource manages Google Workspace Groups. Group resides under the https://www.googleapis.com/auth/admin.directory.group client scope.
        name: googleworkspace_group Resource - terraform-provider-googleworkspace
        title: googleworkspace_group Resource - terraform-provider-googleworkspace
        argumentDocs:
            admin_created: (Boolean) Value is true if this group was created by an administrator rather than a user.
            aliases: (List of String) asps.list of group's email addresses.
            create: (String)
            description: (String) An extended description to help users determine the purpose of a group.For example, you can include information about who should join the group,the types of messages to send to the group, links to FAQs about the group, or related groups.
            direct_members_count: (Number) The number of users that are direct members of the group.If a group is a member (child) of this group (the parent),members of the child group are not counted in the directMembersCount property of the parent group.
            email: (String) The group's email address. If your account has multiple domains,select the appropriate domain for the email address. The email must be unique.
            etag: (String) ETag of the resource.
            id: (String) The unique ID of a group. A group id can be used as a group request URI's groupKey.
            name: (String) The group's display name.
            non_editable_aliases: (List of String) asps.list of the group's non-editable alias email addresses that are outside of the account's primary domain or subdomains. These are functioning email addresses used by the group.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - |-
              terraform import googleworkspace_group.sales 01abcde23fg4h5i
              # or with email as id
              terraform import googleworkspace_group.sales sales@example.com
    googleworkspace_group_member Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: Group Member resource manages Google Workspace Groups Members. Group Member resides under the https://www.googleapis.com/auth/admin.directory.group client scope.
        name: googleworkspace_group_member Resource - terraform-provider-googleworkspace
        title: googleworkspace_group_member Resource - terraform-provider-googleworkspace
        argumentDocs:
            ALL_MAIL: ': All messages, delivered as soon as they arrive.'
            CUSTOMER: ': The member represents all users in a domain. An email address is not returned and the ID returned is the customer ID.'
            DAILY: ': No more than one message a day.'
            DIGEST: ': Up to 25 messages bundled into a single message.'
            DISABLED: ': Remove subscription.'
            GROUP: ': The member is another group.'
            MANAGER: ': This role is only available if the Google Groups for Business is enabled using the Admin Console. A MANAGER role can do everything done by an OWNER role except make a member an OWNER or delete the group. A group can have multiple MANAGER members.'
            MEMBER: ': This role can subscribe to a group, view discussion archives, and view the group''s membership list.'
            NONE: ': No messages.'
            OWNER: ': This role can send messages to the group, add or remove members, change member roles, change group''s settings, and delete the group. An OWNER must be a member of the group. A group can have more than one OWNER.'
            USER: ': The member is a user.'
            create: (String)
            delivery_settings: '(String) Defaults to ALL_MAIL. Defines mail delivery preferences of member. Acceptable values are:'
            email: (String) The member's email address. A member can be a user or another group. This property is required when adding a member to a group. The email must be unique and cannot be an alias of another group. If the email address is changed, the API automatically reflects the email address changes.
            etag: (String) ETag of the resource.
            group_id: (String) Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
            id: (String) The ID of this resource.
            member_id: (String) The unique ID of the group member. A member id can be used as a member request URI's memberKey.
            role: '(String) Defaults to MEMBER. The member''s role in a group. The API returns an error for cycles in group memberships. For example, if group1 is a member of group2, group2 cannot be a member of group1. Acceptable values are:'
            status: (String) Status of member.
            timeouts: (Block, Optional) (see below for nested schema)
            type: '(String) Defaults to USER. The type of group member. Acceptable values are:'
            update: (String)
        importStatements:
            - terraform import googleworkspace_group_member.manager groups/01abcde23fg4h5i/members/123456789012345678901
    googleworkspace_group_members Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: Group Members resource manages Google Workspace Groups Members. Group Members resides under the https://www.googleapis.com/auth/admin.directory.group client scope.
        name: googleworkspace_group_members Resource - terraform-provider-googleworkspace
        title: googleworkspace_group_members Resource - terraform-provider-googleworkspace
        argumentDocs:
            ALL_MAIL: ': All messages, delivered as soon as they arrive.'
            CUSTOMER: ': The member represents all users in a domain. An email address is not returned and the ID returned is the customer ID.'
            DAILY: ': No more than one message a day.'
            DIGEST: ': Up to 25 messages bundled into a single message.'
            DISABLED: ': Remove subscription.'
            GROUP: ': The member is another group.'
            MANAGER: ': This role is only available if the Google Groups for Business is enabled using the Admin Console. A MANAGER role can do everything done by an OWNER role except make a member an OWNER or delete the group. A group can have multiple MANAGER members.'
            MEMBER: ': This role can subscribe to a group, view discussion archives, and view the group''s membership list.'
            NONE: ': No messages.'
            OWNER: ': This role can send messages to the group, add or remove members, change member roles, change group''s settings, and delete the group. An OWNER must be a member of the group. A group can have more than one OWNER.'
            USER: ': The member is a user.'
            delivery_settings: '(String) Defaults to ALL_MAIL. Defines mail delivery preferences of member. Acceptable values are:'
            email: (String) The member's email address. A member can be a user or another group. This property isrequired when adding a member to a group. The email must be unique and cannot be an alias of another group. If the email address is changed, the API automatically reflects the email address changes.
            etag: (String) ETag of the resource.
            group_id: (String) Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
            id: (String) The ID of this resource.
            members: (Block Set) The members of the group (see below for nested schema)
            role: '(String) Defaults to MEMBER. The member''s role in a group. The API returns an error for cycles in group memberships. For example, if group1 is a member of group2, group2 cannot be a member of group1. Acceptable values are:'
            status: (String) Status of member.
            type: '(String) Defaults to USER. The type of group member. Acceptable values are:'
        importStatements:
            - terraform import googleworkspace_group_members.sales groups/01abcde23fg4h5i
    googleworkspace_group_settings Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: Group Settings resource manages Google Workspace Groups Setting. Group Settings requires the https://www.googleapis.com/auth/apps.groups.settings client scope.
        name: googleworkspace_group_settings Resource - terraform-provider-googleworkspace
        title: googleworkspace_group_settings Resource - terraform-provider-googleworkspace
        argumentDocs:
            ALL_IN_DOMAIN_CAN_JOIN: ': Anyone in the account domain can join. This includes accounts with multiple domains.'
            ALL_IN_DOMAIN_CAN_POST: ': Anyone in the account can post a message.'
            ALL_IN_DOMAIN_CAN_VIEW: ': Anyone in your account can view this group''s messages.'
            ALL_MANAGERS_CAN_POST: ': Managers, including group owners, can post messages.'
            ALL_MANAGERS_CAN_VIEW: ': Any group manager can view this group''s messages.'
            ALL_MEMBERS_CAN_POST: ': Any group member can post a message.'
            ALL_MEMBERS_CAN_VIEW: ': All group members can view the group''s messages.'
            ALL_OWNERS_CAN_POST: ': Only group owners can post a message.'
            ALL_OWNERS_CAN_VIEW: ': The group owners can view this group''s messages.'
            ALLOW: ': Post the message to the group.'
            ANYONE_CAN_JOIN: ': Any Internet user, both inside and outside your domain, can join the group.'
            ANYONE_CAN_POST: |-
                : Any Internet user who outside your account can access your Google Groups service and post a message.
                *Note: When who_can_post_message is set to ANYONE_CAN_POST, we recommend themessage_moderation_level be set to MODERATE_NON_MEMBERS to protect the group from possible spam. Users not belonging to the organization are not allowed to become members of this group.
            ANYONE_CAN_VIEW: ': Any Internet user can view the group''s messages.'
            CAN_REQUEST_TO_JOIN: ': Non members can request an invitation to join.'
            INVITED_CAN_JOIN: ': Candidates for membership can be invited to join.'
            MODERATE: ': Send the message to the moderation queue. This is the default.'
            MODERATE_ALL_MESSAGES: ': All messages are sent to the group owner''s email address for approval. If approved, the message is sent to the group.'
            MODERATE_NEW_MEMBERS: ': All messages from new members are sent to the group owner''s email address for approval. If approved, the message is sent to the group.'
            MODERATE_NON_MEMBERS: ': All messages from non group members are sent to the group owner''s email address for approval. If approved, the message is sent to the group.'
            MODERATE_NONE: |-
                : No moderator approval is required. Messages are delivered directly to the group.
                Note: When the who_can_post_message is set to ANYONE_CAN_POST, we recommend the message_moderation_level be set to MODERATE_NON_MEMBERS to protect the group from possible spam.When member_can_post_as_the_group is true, any message moderation settings on individual users or new members will not apply to posts made on behalf of the group.
            NONE_CAN_POST: ': The group is disabled and archived. No one can post a message to this group. * When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an error. * If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST.'
            REJECT: ': Immediately reject the message.'
            REPLY_TO_CUSTOM: ': For replies to messages, use the group''s custom email address. When set to REPLY_TO_CUSTOM, the custom_reply_to property holds the custom email address used when replying to a message, the customReplyTo property must have a value. Otherwise an error is returned.'
            REPLY_TO_IGNORE: ': Group users individually decide where the message reply is sent.'
            REPLY_TO_LIST: ': This reply message is sent to the group.'
            REPLY_TO_MANAGERS: ': This reply message is sent to the group''s managers, which includes all managers and the group owner.'
            REPLY_TO_OWNER: ': The reply is sent to the owner(s) of the group. This does not include the group''s managers.'
            REPLY_TO_SENDER: ': The reply sent to author of message.'
            SILENTLY_MODERATE: ': Send the message to the moderation queue, but do not send notification to moderators.'
            allow_external_members: (Boolean) Defaults to false. Identifies whether members external to your organization can join the group. If true, Google Workspace users external to your organization can become members of this group. If false, users not belonging to the organization are not allowed to become members of this group.
            allow_web_posting: (Boolean) Defaults to true. Allows posting from web. If true, allows any member to post to the group forum. If false, Members only use Gmail to communicate with the group.
            archive_only: (Boolean) Defaults to false. Allows the group to be archived only. If true, Group is archived and the group is inactive. New messages to this group are rejected. The older archived messages are browsable and searchable. If true, the who_can_post_message property is set to NONE_CAN_POST. If reverted from true to false, who_can_post_message is set to ALL_MANAGERS_CAN_POST. If false, The group is active and can receive messages. When false, updating who_can_post_message to NONE_CAN_POST, results in an error.
            create: (String)
            custom_footer_text: (String) Set the content of custom footer text. The maximum number of characters is 1,000.
            custom_reply_to: (String) An email address used when replying to a message if the reply_to property is set to REPLY_TO_CUSTOM. This address is defined by an account administrator. When the group's reply_to property is set to REPLY_TO_CUSTOM, the custom_reply_to property holds a custom email address used when replying to a message, the custom_reply_to property must have a text value or an error is returned.
            custom_roles_enabled_for_settings_to_be_merged: (Boolean) Specifies whether the group has a custom role that's included in one of the settings being merged.
            default_message_deny_notification_text: (String) When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters. Requires send_message_deny_notification property to be true.
            description: (String) Description of the group. The maximum group description is no more than 300 characters.
            email: (String) The group's email address.
            enable_collaborative_inbox: (Boolean) Defaults to false. Specifies whether a collaborative inbox will remain turned on for the group.
            id: (String) The ID of this resource.
            include_custom_footer: (Boolean) Defaults to false. Whether to include custom footer.
            include_in_global_address_list: (Boolean) Defaults to true. Enables the group to be included in the Global Address List. If true, the group is included in the Global Address List. If false, it is not included in the Global Address List.
            is_archived: (Boolean) Defaults to false. Allows the Group contents to be archived. If true, archive messages sent to the group. If false, Do not keep an archive of messages sent to this group. If false, previously archived messages remain in the archive.
            members_can_post_as_the_group: (Boolean) Defaults to false. Enables members to post messages as the group. If true, group member can post messages using the group's email address instead of their own email address. Message appear to originate from the group itself. Any message moderation settings on individual users or new members do not apply to posts made on behalf of the group. If false, members can not post in behalf of the group's email address.
            message_moderation_level: '(String) Defaults to MODERATE_NONE. Moderation level of incoming messages. Possible values are:'
            name: (String) Name of the group, which has a maximum size of 75 characters.
            primary_language: (String) The primary language for group. For a group's primary language use the language tags from the Google Workspace languages found at Google Workspace Email Settings API Email Language Tags.
            reply_to: '(String) Defaults to REPLY_TO_IGNORE. Specifies who receives the default reply. Possible values are:'
            send_message_deny_notification: (Boolean) Defaults to false. Allows a member to be notified if the member's message to the group is denied by the group owner. If true, when a message is rejected, send the deny message notification to the message author. The default_message_deny_notification_text property is dependent on the send_message_deny_notification property being true. If false, when a message is rejected, no notification is sent.
            spam_moderation_level: '(String) Defaults to MODERATE. Specifies moderation levels for messages detected as spam. Possible values are:'
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            who_can_assist_content: '(String) Defaults to NONE. Specifies who can moderate metadata. Possible values are:'
            who_can_contact_owner: '(String) Defaults to ANYONE_CAN_CONTACT. Permission to contact owner of the group via web UI. Possible values are:'
            who_can_discover_group: '(String) Defaults to ALL_IN_DOMAIN_CAN_DISCOVER. Specifies the set of users for whom this group is discoverable. Possible values are:'
            who_can_join: '(String) Defaults to CAN_REQUEST_TO_JOIN. Permission to join group. Possible values are:'
            who_can_leave_group: '(String) Defaults to ALL_MEMBERS_CAN_LEAVE. Permission to leave the group. Possible values are:'
            who_can_moderate_content: '(String) Defaults to OWNERS_AND_MANAGERS. Specifies who can moderate content. Possible values are:'
            who_can_moderate_members: '(String) Defaults to OWNERS_AND_MANAGERS. Specifies who can manage members. Possible values are:'
            who_can_post_message: '(String) Permissions to post messages. Possible values are:'
            who_can_view_group: '(String) Defaults to ALL_MEMBERS_CAN_VIEW. Permissions to view group messages. Possible values are:'
            who_can_view_membership: '(String) Defaults to ALL_MEMBERS_CAN_VIEW. Permissions to view membership. Possible values are:'
        importStatements:
            - terraform import googleworkspace_group_settings.sales-settings sales@example.com
    googleworkspace_org_unit Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: OrgUnit resource manages Google Workspace OrgUnits. Org Unit resides under the https://www.googleapis.com/auth/admin.directory.orgunit client scope.
        name: googleworkspace_org_unit Resource - terraform-provider-googleworkspace
        title: googleworkspace_org_unit Resource - terraform-provider-googleworkspace
        argumentDocs:
            block_inheritance: (Boolean) Defaults to false. Determines if a sub-organizational unit can inherit the settings of the parent organization. False means a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the administration help center.
            description: (String) Description of the organizational unit.
            etag: (String) ETag of the resource.
            id: (String) The ID of this resource.
            name: (String) The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales_support parent path is sales_support.
            org_unit_id: (String) The unique ID of the organizational unit.
            org_unit_path: (String) The full path to the organizational unit. The orgUnitPath is a derived property. When listed, it is derived from parentOrgunitPath and organizational unit's name. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an orgUnitPath, either update the name of the organization or the parentOrgunitPath. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the administration help center. For more information about moving a user to a different organization, see chromeosdevices.update a user.
            parent_org_unit_id: (String) The unique ID of the parent organizational unit.
            parent_org_unit_path: (String) The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit.
        importStatements:
            - terraform import googleworkspace_org_unit.org "id:01ab2c3d4efg56h"
    googleworkspace_role Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: Role resource in the Terraform Googleworkspace provider. Role resides under the https://www.googleapis.com/auth/admin.directory.rolemanagement client scope.
        name: googleworkspace_role Resource - terraform-provider-googleworkspace
        title: googleworkspace_role Resource - terraform-provider-googleworkspace
        argumentDocs:
            description: (String) A short description of the role.
            etag: (String) ETag of the resource.
            id: (String) ID of the role.
            is_super_admin_role: (Boolean) Returns true if the role is a super admin role.
            is_system_role: (Boolean) Returns true if this is a pre-defined system role.
            name: (String) Name of the role.
            privilege_name: (String) The name of the privilege.
            privileges: '(Block Set, Min: 1) The set of privileges that are granted to this role. (see below for nested schema)'
            service_id: (String) The obfuscated ID of the service this privilege is for.
        importStatements:
            - terraform import googleworkspace_role.admin 12345678901234567
    googleworkspace_role_assignment Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: Role Assignment resource in the Terraform Googleworkspace provider. Role Assignment resides under the https://www.googleapis.com/auth/admin.directory.rolemanagement client scope.
        name: googleworkspace_role_assignment Resource - terraform-provider-googleworkspace
        title: googleworkspace_role_assignment Resource - terraform-provider-googleworkspace
        argumentDocs:
            assigned_to: (String) The unique ID of the user this role is assigned to.
            etag: (String) ETag of the resource.
            id: (String) ID of this roleAssignment.
            org_unit_id: (String) If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to.
            role_id: (String) The ID of the role that is assigned.
            scope_type: '(String) Defaults to CUSTOMER. The scope in which this role is assigned. Valid values are :'
        importStatements:
            - terraform import googleworkspace_role_assignment.dwight 12345678901234567
    googleworkspace_schema Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: Schema resource manages Google Workspace Schemas. Schema resides under the https://www.googleapis.com/auth/admin.directory.userschema client scope.
        name: googleworkspace_schema Resource - terraform-provider-googleworkspace
        title: googleworkspace_schema Resource - terraform-provider-googleworkspace
        argumentDocs:
            ALL_DOMAIN_USERS: 'Note: It may take up to 24 hours for changes to this field to be reflected.'
            create: (String)
            delete: (String)
            display_name: (String) Display name for the schema.
            etag: (String) ETag of the resource.
            field_id: (String) The unique identifier of the field.
            field_name: (String) The name of the field.
            field_type: '(String) The type of the field. Acceptable values are:'
            fields: '(Block List, Min: 1) A list of fields in the schema. (see below for nested schema)'
            id: (String) The ID of this resource.
            indexed: (Boolean) Defaults to true. Boolean specifying whether the field is indexed or not.
            max_value: (Number) Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.
            min_value: (Number) Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.
            multi_valued: (Boolean) Defaults to false. A boolean specifying whether this is a multi-valued field or not.
            numeric_indexing_spec: '(Block List, Max: 1) Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the numericIndexingSpec allows range queries to be supported. (see below for nested schema)'
            read_access_type: '(String) Defaults to ALL_DOMAIN_USERS. Specifies who can view values of this field. See Retrieve users as a non-administrator for more information. Acceptable values are:'
            schema_id: (String) The unique identifier of the schema.
            schema_name: (String) The schema's name.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import googleworkspace_schema.birthday Ab0C_DEFGhIJKLmNopQ1Rs==
    googleworkspace_user Resource - terraform-provider-googleworkspace:
        subCategory: ""
        description: User resource manages Google Workspace Users. User resides under the https://www.googleapis.com/auth/admin.directory.user client scope.
        name: googleworkspace_user Resource - terraform-provider-googleworkspace
        title: googleworkspace_user Resource - terraform-provider-googleworkspace
        argumentDocs:
            account_id: (String) A POSIX account field identifier.
            address: (String) The user's email address. Also serves as the email ID. This value can be the user's primary email address or an alias.
            addresses: (Block List) A list of the user's addresses. The maximum allowed data size is 10Kb. (see below for nested schema)
            agreed_to_terms: (Boolean) This property is true if the user has completed an initial login and accepted the Terms of Service agreement.
            aliases: (List of String) asps.list of the user's alias email addresses.
            archived: (Boolean) Indicates if user is archived.
            area: (String) Textual location. This is most useful for display purposes to concisely describe the location. For example, Mountain View, CA or Near Seattle.
            building_id: (String) Building identifier.
            change_password_at_next_login: (Boolean) Indicates if the user is forced to change their password at next login. This setting doesn't apply when the user signs in via a third-party identity provider.
            cost_center: (String) The cost center of the user's organization.
            country: (String) Country
            country_code: (String) The country code. Uses the ISO 3166-1 standard.
            create: (String)
            creation_time: (String) The time the user's account was created. The value is in ISO 8601 date and time format. The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example, 2010-04-05T17:30:04+01:00.
            custom: ','
            custom_language: (String) Other language. A user can provide their own language name if there is no corresponding Google III language code. If this is set, LanguageCode can't be set.
            custom_protocol: (String) If the protocol value is custom_protocol, this property holds the custom protocol's string.
            custom_schemas: (Block List) Custom fields of the user. (see below for nested schema)
            custom_type: (String) If the address type is custom, this property contains the custom value.
            customer_id: (String) The customer ID to retrieve all account users. You can use the alias my_customer to represent your account's customerId. As a reseller administrator, you can use the resold customer account's customerId. To get a customerId, use the account's primary domain in the domain parameter of a users.list request.
            deletion_time: (String) The time the user's account was deleted. The value is in ISO 8601 date and time format The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example 2010-04-05T17:30:04+01:00.
            department: (String) Specifies the department within the organization, such as sales or engineering.
            description: (String) The description of the organization.
            desk_code: (String) Most specific textual code of individual desk location.
            domain: (String) The domain the organization belongs to.
            emails: (Block List) A list of the user's email addresses. The maximum allowed data size is 10Kb. (see below for nested schema)
            etag: (String) ETag of the resource.
            expiration_time_usec: (String) An expiration time in microseconds since epoch.
            extended_address: (String) For extended addresses, such as an address that includes a sub-region.
            external_ids: (Block List) A list of external IDs for the user, such as an employee or network ID. The maximum allowed data size is 2Kb. (see below for nested schema)
            family_name: (String) The user's last name.
            fingerprint: (String) A SHA-256 fingerprint of the SSH public key.
            floor_name: (String) Floor name/number.
            floor_section: (String) Floor section. More specific location within the floor. For example, if a floor is divided into sections A, B, and C, this field would identify one of those values.
            formatted: (String) A full and unstructured postal address. This is not synced with the structured address fields.
            full_name: (String) The user's full name formed by concatenating the first and last name values.
            full_time_equivalent: (Number) The full-time equivalent millipercent within the organization (100000 = 100%)
            gecos: (String) The GECOS (user information) for this account.
            gid: (String) The default group ID.
            given_name: (String) The user's first name.
            hash_function: (String) Stores the hash format of the password property. We recommend sending the password property value as a base 16 bit hexadecimal-encoded hash value. Set the hashFunction values as either the SHA-1, MD5, or crypt hash format.
            home: ','
            home_directory: (String) The path to the home directory for this account.
            id: (String) The unique ID for the user.
            im: (String) The user's IM network ID.
            ims: (Block List) The user's Instant Messenger (IM) accounts. A user account can have multiple ims properties. But, only one of these ims properties can be the primary IM contact. The maximum allowed data size is 2Kb. (see below for nested schema)
            include_in_global_address_list: (Boolean) Defaults to true. Indicates if the user's profile is visible in the Google Workspace global address list when the contact sharing feature is enabled for the domain.
            ip_allowlist: (Boolean) If true, the user's IP address is added to the allow list.
            is_admin: (Boolean) Indicates a user with super admininistrator privileges.
            is_delegated_admin: (Boolean) Indicates if the user is a delegated administrator.
            is_enforced_in_2_step_verification: (Boolean) Is 2-step verification enforced.
            is_enrolled_in_2_step_verification: (Boolean) Is enrolled in 2-step verification.
            is_mailbox_setup: (Boolean) Indicates if the user's Google mailbox is created. This property is only applicable if the user has been assigned a Gmail license.
            key: (String) An SSH public key.
            keywords: (Block List) A list of the user's keywords. The maximum allowed data size is 1Kb. (see below for nested schema)
            language_code: (String) Defaults to en. Language Code. Should be used for storing Google III LanguageCode string representation for language. Illegal values cause SchemaException.
            languages: (Block List) A list of the user's languages. The maximum allowed data size is 1Kb. (see below for nested schema)
            last_login_time: (String) The last time the user logged into the user's account. The value is in ISO 8601 date and time format. The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example, 2010-04-05T17:30:04+01:00.
            locality: (String) The town or city of the address.
            location: (String) The physical location of the organization. This does not need to be a fully qualified address.
            locations: (Block List) A list of the user's locations. The maximum allowed data size is 10Kb. (see below for nested schema)
            name: '(Block List, Min: 1, Max: 1) Holds the given and family names of the user, and the read-only fullName value. The maximum number of characters in the givenName and in the familyName values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). Maximum allowed data size for this field is 1Kb. (see below for nested schema)'
            non_editable_aliases: (List of String) asps.list of the user's non-editable alias email addresses. These are typically outside the account's primary domain or sub-domain.
            operating_system_type: '(String) The operating system type for this account. Acceptable values:'
            org_unit_path: (String) The full path of the parent organization associated with the user. If the parent organization is the top-level, it is represented as a forward slash (/).
            organizations: (Block List) A list of organizations the user belongs to. The maximum allowed data size is 10Kb. (see below for nested schema)
            other: ','
            password: (String, Sensitive) Stores the password for the user account. A password can contain any combination of ASCII characters. A minimum of 8 characters is required. The maximum length is 100 characters. As the API does not return the value of password, this field is write-only, and the value stored in the state will be what is provided in the configuration. The field is required on create and will be empty on import.
            phones: (Block List) A list of the user's phone numbers. The maximum allowed data size is 1Kb. (see below for nested schema)
            po_box: (String) The post office box, if present.
            posix_accounts: (Block List) A list of POSIX account information for the user. (see below for nested schema)
            postal_code: (String) The ZIP or postal code, if applicable.
            preference: (String) Defaults to preferred. If present, controls whether the specified languageCode is the user's preferred language. Allowed values are preferred and not_preferred.
            primary: (Boolean) If this is the user's primary address. The addresses list may contain only one primary address.
            primary_email: (String) The user's primary email address. The primaryEmail must be unique and cannot be an alias of another user.
            protocol: '(String) An IM protocol identifies the IM network. The value can be a custom network or the standard network. Acceptable values:'
            recovery_email: (String) Recovery email of the user.
            recovery_phone: '(String) Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: +16506661212.'
            region: (String) The abbreviated province or state.
            relations: (Block List) A list of the user's relationships to other users. The maximum allowed data size for this field is 2Kb. (see below for nested schema)
            schema_name: (String) The name of the schema.
            schema_values: (Map of String) JSON encoded map that represents key/value pairs that correspond to the given schema.
            shell: (String) The path to the login shell for this account.
            source_is_structured: (Boolean) Indicates if the user-supplied address was formatted. Formatted addresses are not currently supported.
            ssh_public_keys: (Block List) A list of SSH public keys. The maximum allowed data size is 10Kb. (see below for nested schema)
            street_address: (String) The street address, such as 1600 Amphitheatre Parkway. Whitespace within the string is ignored; however, newlines are significant.
            suspended: (Boolean) Indicates if user is suspended.
            suspension_reason: (String) Has the reason a user account is suspended either by the administrator or by Google at the time of suspension. The property is returned only if the suspended property is true.
            symbol: (String) Text string symbol of the organization. For example, the text symbol for Google is GOOG.
            system_id: (String) System identifier for which account Username or Uid apply to.
            thumbnail_photo_etag: (String) ETag of the user's photo
            thumbnail_photo_url: (String) Photo Url of the user.
            timeouts: (Block, Optional) (see below for nested schema)
            title: (String) The user's title within the organization. For example, member or engineer.
            type: '(String) The address type. Acceptable values:'
            uid: (String) The POSIX compliant user ID.
            update: (String)
            username: (String) The username of the account.
            value: (String) The value of the ID.
            websites: (Block List) A list of the user's websites. The maximum allowed data size is 2Kb. (see below for nested schema)
            work: .
        importStatements:
            - |-
              terraform import googleworkspace_user.dwight 123456789012345678901
              # or with email as id
              terraform import googleworkspace_user.dwight dwight.schrute@example.com
